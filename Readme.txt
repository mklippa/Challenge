Необходимо написать на языке C# под платформу .Net Core версии не ниже 2.0 планировщик задач - класс, реализующий интерфейс ITaskScheduler.
Планироващик принимает на вход задачи и исполняет их в порядке указанного приоритета.
При инициализации (метод Initialize) планировщику передается число задач, которое он может исполнять одновременно.
При постановке задачи (метод Schedule) планировщик должен вернуть признак постановки задачи на исполнение.
При остановке (метод Stop) планировщик возвращает объект Task, который должен завершиться после исполнения всех запланированных задач.

Приоритет определяет порядок выборки задачи из очереди в соответствии с правилами:
    1. Задачи с приоритетом High имеют наивысший приоритет и должны исполняться в первую очередь.
       При этом на исполнение может быть поставлено не более трех задач подряд с наивысшим приоритетом в случае, если имеются задачи с нормальным приоритетом.
       После исполнения задачи с нормальным приоритетом, можно снова запланировать не более трех подряд задач с наивысшим приоритетом.
       Т.е. если имеются четыре задачи с приоритетом High и одна задача с приоритетом Normal, сначала должны выполниться три задачи High, затем Normal, затем опять High.
    2. Задачи с приоритетом Normal выполняются после задач с приоритетом High.
    3. Задачи с приоритетом Low выполняются в последнюю очередь.

__________________________Пример____________________________
Допустим, имеются задачи со следующими приоритетами:

    1.High
    2.High
    3.High
    4.High
    5.Normal
    6.Low
    7.Normal
    8.High

Тогда задачи будут исполнены в следующем порядке:
    1.High
    2.High
    3.High
    5.Normal
    4.High
    8.High
    7.Normal
    6.Low
____________________________________________________________

Критерии, учитываемые при оценке решения:
- работоспособность планировщика
- наличие unit тестов
- чистота кода

Плюсом будет написание конспольного приложения, принимающего на вход число исполняемых задач, и выводящее в консоль приоритет исполняемой задачи.